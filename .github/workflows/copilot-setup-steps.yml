name: "Copilot Setup Steps"

# Allow testing of the setup steps from your repository's "Actions" tab.
on: workflow_dispatch

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  # See https://docs.github.com/en/copilot/customizing-copilot/customizing-the-development-environment-for-copilot-coding-agent
  copilot-setup-steps:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - uses: actions/checkout@v4.2.2

      # From https://github.com/dotnet/dotnet-buildtools-prereqs-docker/blob/main/src/ubuntu/25.04/helix/Dockerfile
      - name: Install dependencies
        env:
          LIBMSQUIC_VERSION: '2.4.8'
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -qq -y \
          autoconf \
          automake \
          build-essential \
          cmake \
          clang \
          curl \
          gcc \
          gdb \
          git \
          gss-ntlmssp \
          iputils-ping \
          libcurl4 \
          libffi-dev \
          libicu-dev \
          libssl-dev \
          libtool \
          libunwind8 \
          libunwind-dev \
          lldb \
          llvm \
          locales \
          locales-all \
          python3-dev \
          python3-pip \
          python3-venv \
          software-properties-common \
          sudo \
          tzdata \
          unzip \
          libbpf1 \
          libelf1t64 \
          libnl-3-200 \
          libnl-route-3-200 \
          libnuma1 \
          libxdp1 \
          libkrb5-dev \
          liblttng-ust-dev \
          cpio \
          lld \
          python-is-python3 && \
          curl -LO "https://packages.microsoft.com/ubuntu/24.04/prod/pool/main/libm/libmsquic/libmsquic_${LIBMSQUIC_VERSION}_amd64.deb" && \
          sudo dpkg -i libmsquic* && \
          rm libmsquic*

      - name: Restore solution
        env:
          RESTORE_ARGS: --restore --excludecibinarylog --warnaserror false /p:BuildAllConfigurations=true /p:DotNetBuildAllRuntimePacks=true
        # 'DefaultSubsets' don't include 'libs.tests', so restoring it explicitly
        run: |
          ./build.sh $RESTORE_ARGS && \
          ./build.sh libs.tests $RESTORE_ARGS

      - name: Pre-build clr
        run: |
          ./build.sh clr -rc release

